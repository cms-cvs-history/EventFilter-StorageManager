process FU = {

  // options
  untracked PSet options =
  {
    untracked vstring Rethrow = {"ProductNotFound","TooManyProducts","TooFewProducts"}
    untracked bool    makeTriggerResults = true
  }

  service = MessageLogger {
    untracked vstring destinations = { "cout" }
    untracked PSet    cout         = { untracked string threshold = "FATAL" }
    untracked PSet    log4cplus    = { untracked string threshold = "WARNING" }
  }


  untracked PSet maxEvents = {untracked int32 input = -1}
  // source
  source = DaqSource
  {
    string          reader    = "FUShmReader"
  }

  path p1 = { m2, a1 }
  path p2 = { m2, pre1 }
  path p3 = { m2, pre2 }
  path p4 = { m2 }
  path p5 = { m2 }
  endpath e = { out2 }
  module m2 = StreamThingProducer {
                        int32 array_size = 200
                        int32 instance_count=5}
  module a1 = StreamThingAnalyzer { string product_to_get="m2" }
  module pre1 = Prescaler { int32 prescaleFactor = 5 }
  module pre2 = Prescaler { int32 prescaleFactor = 2 }
  module out2 = ShmStreamConsumer {
                        int32 max_event_size = 7000000 
                        int32 max_queue_depth = 5
                        bool use_compression = true
                        int32 compression_level = 1
                        untracked int32 lumiSection_interval = 120
  }
  # DQM back-end interface service
  service = DaqMonitorROOTBackEnd{}

  # DQM source program
  module tester = SMDQMSourceExample{}
  path pDQM ={tester}

  # DQM sender service - under development
  service = FUShmDQMOutputService {
    untracked int32 initialMessageBufferSize = 1000000  // bytes
    double lumiSectionsPerUpdate = 1.0
    bool useCompression = true
    int32 compressionLevel = 1
    untracked int32 lumiSectionInterval = 120 // seconds
  }

}
